version: '3.1'
services:
  mongo-db:
    image: mongo:latest
  
    ports:
       - 27017:27017
    environment:
       MONGO_INITDB_ROOT_USERNAME: admin
       MONGO_INITDB_ROOT_PASSWORD: password
    # volumes:
    #    - mongo-volume:/data/db
    # networks:
    #    - three-tier-network 

    healthcheck:
       test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
       interval: 10s
       timeout: 5s
       retries: 5

 
# Docker compose file for mongo-express
   
  mongo-express:
    image: mongo-express

    ports:
       - 8081:8081
    
    environment:
        ME_CONFIG_MONGODB_ADMINUSERNAME : admin
        ME_CONFIG_MONGODB_ADMINPASSWORD : password
        ME_CONFIG_MONGODB_URL: mongodb://root:password@mongo:27017/
        ME_CONFIG_MONGODB_SERVER : mongo-db

    depends_on:
      - "mongo-db"     
#     volumes:
#        - mongo-volume:/data/db
#     networks:
#        - three-tier-network 

# Docker compose file for front end app
   
  frontend-app:
    build:
      context: ./frontend
      dockerfile: Dockerfile
   

    ports:
       - 3007:3000
    
    environment:
        - REACT_APP_API_URL=http://localhost:5000
    depends_on:
      - "backend-app"     
#     volumes:
#        - mongo-volume:/data/db
#     networks:
#        - three-tier-network 


# Docker compose file for back end app
   
  backend-app:
    build:                 
      context: ./backend

      dockerfile: Dockerfile
    

    ports:
       - 5000:5000
    
    environment:
        - MONGODB_URI=mongodb://localhost:27017/myapp


    depends_on:
      - "mongo-db"     
#     volumes:
#        - mongo-volume:/data/db
#     networks:
#        - three-tier-network 













# volumes:
#    mongo-volume :
# networks:
#    three-tier-network :